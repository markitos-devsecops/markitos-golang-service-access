{
	"info": {
		"_postman_id": "4dafcefd-17f7-4b98-838e-c1498e784bfb",
		"name": "markitos-golang-service-access",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40277391"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "motd",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/v1/users/motd",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"v1",
								"users",
								"motd"
							]
						}
					},
					"response": []
				},
				{
					"name": "me",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/v1/users/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Markitos\",\n    \"email\": \"mail1@mail1.com\",\n    \"password\": \"Mail1.Markitos\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if (!pm.collectionVariables.get(\"auth_token\")) {",
									"    pm.sendRequest({",
									"        url: pm.collectionVariables.get(\"base_url\") + '/login',",
									"        method: 'POST',",
									"        header: {",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'raw',",
									"            raw: JSON.stringify({",
									"                email: pm.collectionVariables.get(\"email\"),",
									"                password: pm.collectionVariables.get(\"password\")",
									"            })",
									"        }",
									"    }, function (err, res) {",
									"        if (err) {",
									"            console.error(\"Error during login request:\", err);",
									"            return;",
									"        }",
									"        try {",
									"            var jsonData = res.json();",
									"            if (jsonData.token) {",
									"                pm.collectionVariables.set(\"auth_token\", jsonData.token);",
									"                console.log(\"Access token refreshed:\", jsonData.token);",
									"            } else {",
									"                console.error(\"Token not found in response\");",
									"            }",
									"        } catch (e) {",
									"            console.error(\"Failed to parse JSON response:\", e);",
									"        }",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Guardar el token de acceso",
									"pm.test(\"Guardar token de acceso\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.token) {",
									"        pm.collectionVariables.set(\"auth_token\", jsonData.token);",
									"        console.log(\"Access token saved:\", jsonData.token);",
									"    } else {",
									"        console.error(\"Token not found in response\");",
									"    }",
									"});",
									"",
									"// Guardar los valores del cuerpo de la petición en variables de la colección",
									"if (pm.request.body && pm.request.body.raw) {",
									"    var requestBody = JSON.parse(pm.request.body.raw);",
									"    pm.collectionVariables.set(\"email\", requestBody.email);",
									"    pm.collectionVariables.set(\"password\", requestBody.password);",
									"    console.log(\"Email and password saved:\", requestBody.email, requestBody.password);",
									"} else {",
									"    console.error(\"Request body is undefined or does not contain 'raw'\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"mail2@mail2.com\",\n    \"password\": \"Mail2@mail2.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Markitos Antonio\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/v1/users/me",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"v1",
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/v1/users",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "default"
		},
		{
			"key": "email",
			"value": "",
			"type": "default"
		},
		{
			"key": "password",
			"value": "",
			"type": "default"
		}
	]
}